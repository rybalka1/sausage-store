stages:
  - build
  - test-sonar
  - test
  - release
include:
  - template: Security/SAST.gitlab-ci.yml

build-code-job:  # задача с именем build-code-job
  stage: build   # этап build
  script:        # объявление скрипта
    - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt  # сохранение номера задачи в файл, чтобы в дальнейшем использовать для копирования артефакта
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository # запуск сборки кода
    - cd ../frontend
    - npm install # загрузка всех сторонних зависимостей
    - npm run build # запуск сборки кода
    - cd ..
    - mkdir sausage-store-0.0.1  # создание директории, в которую копируются артефакты. Это нужно для организации удобной структуры архива
    - cp backend/target/sausage-store-0.0.1-SNAPSHOT.jar backend/sausage-store-0.0.1.jar # копирование собранного фронтэнда
    - mv backend/target/sausage-store-0.0.1-SNAPSHOT.jar sausage-store-0.0.1/sausage-store-0.0.1.jar # копирование собранного бэкенда
    - mv frontend/dist/frontend sausage-store-0.0.1/public_html
  artifacts:
    paths:
      - sausage-store-0.0.1/public_html  # сохранение собранного фронтэнда как артефакт
      - sausage-store-0.0.1/sausage-store-0.0.1.jar # сохранение собранного бэкенда как артефакт
      - backend/sausage-store-0.0.1.jar
      - ${CI_PROJECT_DIR}/.m2/ # сохранение зависимостей для SAST
    reports:
      dotenv: CI_JOB_ID.txt # сохранение файла с переменными как артефакт

spotbugs-sast:
  variables:
    COMPILE: "false"
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    sonar-scanner \
      -Dsonar.projectKey=rybalka-dmitrii_sausage-store_AX2P24pPWyGwrBh1KdZj \
      -Dsonar.sources=. \
      -Dsonar.host.url=https://sonarqube.praktikum-services.ru \
      -Dsonar.login=b5677ebacbc30c7612b6b8cc017ff9d9ed400c47


sonar-backend:
  image:
    name: maven:3.8-openjdk-16
  variables:
    SONAR_HOST_URL: "https://sonarqube.praktikum-services.ru"
    SONAR_TOKEN: "b5677ebacbc30c7612b6b8cc017ff9d9ed400c47"
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  stage: test-sonar
  script:
    - cd backend # "Sonar"
    - mvn -X verify sonar:sonar -Dsonar.projectKey=01_rybalka_d_backend
  allow_failure: true
# upload-release: # задача с именем upload-release
#   stage: release # этап release
#   # only: # запуск этого шага только при изменениях в директориях backend и frontend
#   #   changes:
#   #   - backend//*
#   #   - frontend//*
#   script:
#     - echo "Get artifact from job ${ARTIFACT_JOB_ID}"
#     - > # скачивание артефакта в файл sausage-store-0.0.1.zip
#       curl --location --output sausage-store-0.0.1.zip -H "PRIVATE-TOKEN: ${MY_TOKEN}"
#       "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/${ARTIFACT_JOB_ID}/artifacts"
#     - > # сохранение артефакта в package registry
#       curl -sSL -H "JOB-TOKEN: ${CI_JOB_TOKEN}"
#       -T sausage-store-0.0.1.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/sausage-store/${CI_COMMIT_SHA}/"

# send-message:
#   stage: release
#   script:
#     - echo "Send to slack message"
#     - "curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Дмитрий Рыбалка собрал приложение.\"}' ${SLACK_URL}"
