stages:
  - build
  - release

build-code-job:  # задача с именем build-code-job
  stage: build   # этап build
  script:        # объявление скрипта
    - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt  # сохранение номера задачи в файл, чтобы в дальнейшем использовать для копирования артефакта  
    - cd backend 
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository # запуск сборки кода
    - cd ../frontend 
    - npm install # загрузка всех сторонних зависимостей
    - npm run build # запуск сборки кода
    - cd .. 
    - mkdir sausage-store-0.0.1  # создание директории, в которую копируются артефакты. Это нужно для организации удобной структуры архива
    - mv backend/target/sausage-store-0.0.1-SNAPSHOT.jar sausage-store-0.0.1/sausage-store-0.0.1.jar # копирование собранного бэкенда
    - mv frontend/dist/frontend sausage-store-0.0.1/public_html # копирование собранного фронтэнда
  artifacts:
    paths:
      - sausage-store-0.0.1/public_html  # сохранение собранного фронтэнда как артефакт
      - sausage-store-0.0.1/sausage-store-0.0.1.jar # сохранение собранного бэкенда как артефакт
    reports:
      dotenv: CI_JOB_ID.txt # сохранение файла с переменными как артефакт

