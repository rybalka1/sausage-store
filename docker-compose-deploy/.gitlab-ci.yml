
stages:
  - deploy
include:
  - project: "templates/ci"
    file: "DockerInDockerTemplate.yml"
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}


deploy-docker-compose:
  stage: deploy
  image: alpine:3.15.0
  # если хотим сделать деплой по кнопке
  #rules:
  #- if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  #when: manual
  #- if: '$CI_COMMIT_BRANCH == "master"'
  #  when: manual
  before_script:
  - apk add openssh-client bash
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./docker-compose-deploy/docker-compose.yml ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/docker-compose.yml
    - ssh ${DEV_USER}@${DEV_HOST}
      "export "VERSION=${VERSION}";
      export "SPRING_DATASOURCE_URL=${PSQL_DATASOURCE}";
      export "SPRING_DATASOURCE_USERNAME=${PSQL_USER}";
      export "SPRING_DATASOURCE_PASSWORD=${PSQL_PASSWORD}";
      export "SPRING_DATA_MONGODB_URI=${MONGO_DATA}";
      export "DOCKER_GITLAB_USER_NAME=${DOCKER_GITLAB_USER_NAME}";
      export "DOCKER_GITLAB_TOCKEN=${DOCKER_GITLAB_TOCKEN}";
      export "DEV_USER=${DEV_USER}";
      export "VAULT_HOST"=${VAULT_HOST};
      export "VAULT_TOKEN"=${VAULT_TOKEN};
      export "CI_REGISTRY_IMAGE_BACKEND=${CI_REGISTRY_IMAGE_BACKEND}";
      export "CI_REGISTRY_IMAGE_BACKEND_REPORT=${CI_REGISTRY_IMAGE_BACKEND_REPORT}";
      export "CI_REGISTRY_IMAGE_FRONTEND=${CI_REGISTRY_IMAGE_FRONTEND}";
      export "CI_REGISTRY_URL=${CI_REGISTRY_URL}";
      export "CI_REGISTRY_LOGIN=${CI_REGISTRY_LOGIN}";
      export "CI_REGISTRY_PASSWORD_MANUAL=${CI_REGISTRY_PASSWORD_MANUAL}";
      export "REPORT_PATH=${REPORT_PATH}";
      export "LOG_PATH=${LOG_PATH}";
      export "BACKEND_IMAGE_URL=${CI_REGISTRY_IMAGE_BACKEND}";
      export "BACKEND_REPORT_IMAGE_URL=${CI_REGISTRY_IMAGE_FRONTEND}";
      export "FRONTEND_IMAGE_URL=${CI_REGISTRY_IMAGE_FRONTEND}";
      /bin/bash -s " < ./docker-compose-deploy/docker-compose-deploy.sh
