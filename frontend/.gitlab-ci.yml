stages:
  - build
  - test-sonar
  - test
  - release
  - notification
  - build-docker-frontend
  - upload-frontend
include:
  - project: "templates/ci"
    file: "DockerInDockerTemplate.yml"
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-from-nexus:
  stage: build
  script:
    - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt
    - cd frontend
    - npm install
    - npm run build
    - cd ..
    - mkdir sausage-store-${VERSION}
    - mv frontend/dist/frontend sausage-store-${VERSION}/public_html
  artifacts:
    paths:
      - sausage-store-${VERSION}/public_html
    reports:
      dotenv: CI_JOB_ID.txt
  # rules:
  #   - changes:
  #       - frontend/*

sonarqube-frontend:
  stage: test-sonar
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    SONAR_HOST_URL: "${SONAR_HOST_URL}"
    SONAR_TOKEN: "${SONAR_TOKEN}"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd frontend
    - sonar-scanner -Dsonar.projectKey=01_rybalka_dmitrii_frontend -Dsonar.sources=. -Dsonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_TOKEN}
  allow_failure: true

release:
  stage: release
  script:
    - tar czvf sausage-store-${VERSION}.tar.gz sausage-store-${VERSION}
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/repository/sausage-store-rybalka-dmitrii-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  rules:
    - changes:
        - frontend/*

# send-message-to-slack:
#   stage: notification
#   variables:
#     GIT_STRATEGY: none
#   dependencies: []
#   script:
#     - echo "Send to slack message"
#     - >
#       curl -X POST -H 'Content-type: application/json' --data '{"text":"Вышла новая версия сосисочной — '${VERSION}'\nСкачать фронт можно по ссылке — '${NEXUS_REPO_URL}'/repository/sausage-store-rybalka-dmitrii-frontend/sausage-store/'${VERSION}'/sausage-store-'${VERSION}'.tar.gz"}' ${SLACK_URL}

build-frontend:
  stage: build-docker-frontend
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/sausage-frontend:$VERSION
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:$VERSION
  dependencies:
      - build-from-nexus

upload-frontend-latest:
  stage: upload-frontend
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-frontend:${VERSION}
    - docker tag $CI_REGISTRY_IMAGE/sausage-frontend:${VERSION} $CI_REGISTRY_IMAGE/sausage-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:latest
