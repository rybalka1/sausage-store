stages:
  - build
  - test-sonar
  - test
  - release
  - notification
  - deploy
include:
  - template: Security/SAST.gitlab-ci.yml
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  MAVEN_REPO_PATH: ./.m2/repository
  JAVA_OPTS: -XX:MaxRAMPercentage=90

build:
  stage: build
  script:
    - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt
    - cd ${CI_PROJECT_DIR}/backend
    - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
    - mkdir ${CI_PROJECT_DIR}/sausage-store-${VERSION}
    - cp ${CI_PROJECT_DIR}/backend/target/sausage-store-${VERSION}.jar ${CI_PROJECT_DIR}/backend/sausage-store-${VERSION}.jar
    - mv ${CI_PROJECT_DIR}/backend/target/sausage-store-${VERSION}.jar ${CI_PROJECT_DIR}/sausage-store-${VERSION}/sausage-store-${VERSION}.jar
  artifacts:
    paths:
      - sausage-store-${VERSION}/sausage-store-${VERSION}.jar
      - backend/sausage-store-${VERSION}.jar
      - ${CI_PROJECT_DIR}/.m2/
    reports:
      dotenv: CI_JOB_ID.txt
  rules:
    - changes:
      - backend/*

spotbugs-sast:
  variables:
    COMPILE: "false"
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

sonarqube-backend:
  image:
    name: maven:3.8-openjdk-16
  variables:
    SONAR_HOST_URL: "${SONAR_HOST_URL}"
    SONAR_TOKEN: "${SONAR_TOKEN}"
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  stage: test-sonar
  script:
    - cd backend
    - mvn -X verify sonar:sonar -Dsonar.projectKey=01_rybalka_dmitrii_backend
  allow_failure: true

release:
  stage: release
  script:
    - cd backend
    - mvn deploy -DskipTests -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml
  # rules:
  #   - changes:
  #     - backend/*

send-message-to-slack:
  stage: notification
  variables:
    GIT_STRATEGY: none
  dependencies: []
  script:
    - echo "Send to slack message"
    - >
      curl -X POST -H 'Content-type: application/json' --data '{"text":"Вышла новая версия сосисочной — '${VERSION}'\nСкачать бэкенд можно по ссылке — '${NEXUS_REPO_URL}'/repository/sausage-store-rybalka-dmitrii-backend/com/yandex/practicum/devops/sausage-store/'${VERSION}'/sausage-store-'${VERSION}'.jar"}' ${SLACK_URL}

deploy:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./backend/sausage-store-backend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-backend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./backend/deploy.sh
  environment:
    name: staging
    url: https://${DEV_HOST}
  when: manual
